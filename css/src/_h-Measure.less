
/*################################*\
    xmeter  |  _h-Meaure.less
\*################################*/


// Measure
//
// The Measure Helper constrains an element’s inline-size
// (width, in horizontal writing modes) to a reasonable line length.
//
// The default style sets the max-inline-size of the block to 66 characters, but there are
// narrow and wide variants for differing cases.
//
// The narrow variant is useful in mobile design when the user might want to
// zoom in on text. Reading text with too large a measure on mobile devices requires a lot of
// horizontal scrolling back and forth. Inversely, the wide variant is useful for
// large type when you might not want the text to wrap as often.
//
// Because the block is capped at a character length,
// this style is responsive to font-size. The bigger the font, the larger the line length
// can be before the text wraps. Try adjusting your browser’s font size to see the effects.
//
// <header><dl>
//   <dt>author</dt>  <dd>Chris Harvey</dd>
//   <dt>updated</dt> <dd><time>2017-09-18</time></dd>
// </dl></header>
//
// Markup:
// <p class="h-Measure {{ modifier_class }}">If the measure is too short, the reader’s eyes
// have to dart back and forth more often, causing fatigue. If the measure is too long,
// the reader is more likely to lose track of the previous line.</p>
//
// .h-Measure--narrow - narrow variant constrains the size even tighter
// .h-Measure--wide - wide variant is not as constrained
//
// Weight: 5
//
// Styleguide Helpers.Measure
.h-Measure {
  max-width: 33em; // HACK fallback for `ch` unit
  max-width: 66ch; // HACK fallback for logical properties
  max-inline-size: 66ch;
}
.h-Measure--narrow {
  max-width: 22.5em; // HACK fallback for `ch` unit
  max-width: 45ch; // HACK fallback for logical properties
  max-inline-size: 45ch;
}
.h-Measure--wide {
  max-width: 45em; // HACK fallback for `ch` unit
  max-width: 90ch; // HACK fallback for logical properties
  max-inline-size: 90ch;
}

@media screen  and (min-width: 30em) { .h-Measure-sK { .h-Measure; }  .h-Measure--narrow-sK { .h-Measure--narrow; }  .h-Measure--wide-sK { .h-Measure--wide; } }
@media screen  and (min-width: 45em) { .h-Measure-sM { .h-Measure; }  .h-Measure--narrow-sM { .h-Measure--narrow; }  .h-Measure--wide-sM { .h-Measure--wide; } }
@media screen  and (min-width: 60em) { .h-Measure-sG { .h-Measure; }  .h-Measure--narrow-sG { .h-Measure--narrow; }  .h-Measure--wide-sG { .h-Measure--wide; } }
@media screen  and (min-width: 75em) { .h-Measure-sT { .h-Measure; }  .h-Measure--narrow-sT { .h-Measure--narrow; }  .h-Measure--wide-sT { .h-Measure--wide; } }
@media screen  and (min-width: 90em) { .h-Measure-sP { .h-Measure; }  .h-Measure--narrow-sP { .h-Measure--narrow; }  .h-Measure--wide-sP { .h-Measure--wide; } }
@media not all and (min-width: 30em) { .h-Measure-nK { .h-Measure; }  .h-Measure--narrow-nK { .h-Measure--narrow; }  .h-Measure--wide-nK { .h-Measure--wide; } }
@media not all and (min-width: 45em) { .h-Measure-nM { .h-Measure; }  .h-Measure--narrow-nM { .h-Measure--narrow; }  .h-Measure--wide-nM { .h-Measure--wide; } }
@media not all and (min-width: 60em) { .h-Measure-nG { .h-Measure; }  .h-Measure--narrow-nG { .h-Measure--narrow; }  .h-Measure--wide-nG { .h-Measure--wide; } }
@media not all and (min-width: 75em) { .h-Measure-nT { .h-Measure; }  .h-Measure--narrow-nT { .h-Measure--narrow; }  .h-Measure--wide-nT { .h-Measure--wide; } }
@media not all and (min-width: 90em) { .h-Measure-nP { .h-Measure; }  .h-Measure--narrow-nP { .h-Measure--narrow; }  .h-Measure--wide-nP { .h-Measure--wide; } }
