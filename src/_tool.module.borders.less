
/*#################*\
    _borders.less
\*#################*/


// The following mixins adjust border widths for **BLOCK** Objects only! They will keep the
// vertical rhythm intact when adding border widths (by slightly adjusting position and margins).
// Do *not* use these mixins on INLINE Objects!
//
// Note: This mixin affects border width only (for structure). It does not affect cosmetics,
//       i.e., border style or color. To change these, you must include the `border-style` and
//       `border-color` properties after including this mixin.
//
// `.border-vert(top; ...)`    - adjust the top border
// `.border-vert(bottom; ...)` - adjust the bottom border
// `.border-vert(topbot; ...)` - adjust both the top and bottom borders
// `.border-vert(all; ...)`    - adjust all four borders
//
// @width - (optional: `0`)            value of `border-width`
// @style - (optional: `solid`)        value of `border-style`
// @color - (optional: `currentColor`) value of `border-color`
// ^author
// : Chris Harvey
// ^updated
// : 2015-04-07
// .border-vert(top; @width; @style; @color) {
//   border-top: @width  @style  @color;
//   .pull-this(@width);
// }
// .border-vert(top; @width; @style) {
//   .border-vert(top; @width; @style; currentColor);
// }
.border-vert(top; @width) {
  // .border-vert(top; @width; solid);
  border-top-width: @width;
  .pull-this(@width);
}
.border-vert(top) {
  .border-vert(top; 0);
}

// .border-vert(bottom; @width; @style; @color) {
//   border-bottom: @width  @style  @color;
//   .pull-this(@width);
// }
// .border-vert(bottom; @width; @style) {
//   .border-vert(bottom; @width; @style; currentColor);
// }
.border-vert(bottom; @width) {
  // .border-vert(bottom; @width; solid);
  border-bottom-width: @width;
  .pull-this(@width);
}
.border-vert(bottom) {
  .border-vert(bottom; 0);
}

// .border-vert(topbot; @width; @style; @color) {
//   border-top:    @width  @style  @color;
//   border-bottom: @width  @style  @color;
//   .pull-this(2 * @width);
// }
// .border-vert(topbot; @width; @style) {
//   .border-vert(topbot; @width; @style; currentColor);
// }
.border-vert(topbot; @width) {
  // .border-vert(topbot; @width; solid);
  border-top-width:    @width;
  border-bottom-width: @width;
  .pull-this(2 * @width);
}
.border-vert(topbot) {
  .border-vert(topbot; 0);
}

// .border-vert(all; @width; @style; @color) {
//   border: @width  @style  @color;
//   .pull-this(2 * @width);
// }
// .border-vert(all; @width; @style) {
//   .border-vert(all; @width; @style; currentColor);
// }
.border-vert(all; @width) {
  // .border-vert(all; @width; solid);
  border-width: @width;
  .pull-this(2 * @width);
}
.border-vert(all) {
  .border-vert(all; 0);
}
