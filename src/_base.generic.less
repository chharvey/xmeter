
/*################################*\
    xmeter  |  _base.generic.less
\*################################*/
@import (reference) url('__settings.less');
@import (reference) url('__tool.fallback.box-sizing.less');
@import (reference) url('__tool.module.spacing.less');


* {
  &,
  &::before,
  &::after {
    .box-sizing(border-box);
    border: 0 solid; // reset browser default border
    content: ''; // fallback
    content: none;
    @media print {
      background: transparent;
      box-shadow: none;
      text-shadow: none;
    }
  }
}

// [1] addresses support for `rem` units (otherwise these would be in `body` selector)
html {
  font-size: @g-font_size;     // [1]
  line-height: @g-line_height; // [1]
}

// Vertical spacing between typographical blocks
h1, h2, h3, h4, h5, h6,
p, pre, figure, blockquote,
ol, ul, dl,
table,
fieldset {
  .spacing-bottom(@g-vru);
}
li, dt, dd {
  > ol, > ul, > dl {
    .spacing-bottom(0); // undo default spacing-bottom for nested lists
  }
}

// Font sizes for text-level elements should be in units of `em` instead of `rem` because
// they should scale with their parents.
// Also, inline elements should not affect vertical rhythm, thus line-heights are zero.
span, br,
em, strong, i, mark, u, small,
dfn, b, abbr, var, q, cite, sup, sub,
data, time, code, kbd, samp {
  display: inline;
  line-height: 0;
}

// Elements with a transparent content model
// should inherit their display and line-height, except
// if they are inside an element containing
// only text and/or other inline elements.
// This behavior may be overrided with classes/inline styles.
a, s, ins, del {
  display: inherit;
  line-height: inherit;
  h1 > &, h2 > &, h3 > &, h4 > &, h5 > &, h6 > &,
  p > &, pre > &,
  figure > &, figcaption > &, blockquote > &,
  li > &, dt > &, dd > &,
  caption > &, th > &, td > &,
  legend > &, summary > & {
    display: inline;
    line-height: 0;
  }
}
