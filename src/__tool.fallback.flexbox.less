
/*################################*\
    __tool.fallback.flexbox.less
\*################################*/


#XMETER {
// Table of Contents
// - CONTAINERS
// - ITEMS


  /*++++++++++++++++++++++++++++++++*\
      #CONTAINERS
  \*++++++++++++++++++++++++++++++++*/
  // Sets up a flexbox container.
  //
  // ^author
  // : Chris Harvey
  // ^updated
  // : 2015-02-21
  .flexbox() {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
  }

  // Determines the direction of the flow.
  //
  // @direction - The direction of flow.
  //            - `row` (default)  - left to right in `ltr`; right to left in `rtl`
  //            - `row-reverse`    - right to left in `ltr`; left to right in `rtl`
  //            - `column`         - same as `row` but top to bottom
  //            - `column-reverse` - same as `row-reverse` but bottom to top
  // ^author
  // : Chris Harvey
  // ^updated
  // : 2015-02-12
  .flex-direction(@direction) {
    -webkit-flex-direction: @direction;
            flex-direction: @direction;
  }

  // Determines whether boxes wrap to the next row or column.
  //
  // @wrap - how blocks will wrap
  //       - `nowrap` (default) - single-line / left to right in `ltr`; right to left in `rtl`
  //       - `wrap`             - multi-line  / left to right in `ltr`; right to left in `rtl`
  //       - `wrap-reverse`     - multi-line  / right to left in `ltr`; left to right in `rtl`
  // ^author
  // : Chris Harvey
  // ^updated
  // : 2015-02-12
  .flex-wrap(@wrap) {
    -webkit-flex-wrap: @wrap;
            flex-wrap: @wrap;
  }

  // Determines how content is justified.
  //
  // @justify - how content is justified
  //          - `flex-start` (default) - items are aligned left (in rows) or top (in columns)
  //          - `flex-end`             - items are aligned right (in rows) or bottom (in columns)
  //          - `center`               - items are pushed to middle
  //          - `space-between`        - extra space is distributed between items,
  //                                     leaving them flush left/right
  //          - `space-around`         - extra space is distributed around items,
  //                                     leaving margin on left/right. Good for centering one item
  //                                     without using `margin-left: auto; margin-right: auto;`!!!
  // ^author
  // : Chris Harvey
  // ^updated
  // : 2015-02-20
  .justify-content(@justify) {
    -webkit-justify-content: @justify;
            justify-content: @justify;
  }
  //++++ #end CONTAINERS ++++//


  /*++++++++++++++++++++++++++++++++*\
      #ITEMS
  \*++++++++++++++++++++++++++++++++*/
  // What does this do again?
  //
  // @values - ?????
  // ^author
  // : Chris Harvey
  // ^updated
  // : 2015-02-12
  .flex(@values) {
    -webkit-box-flex: @values;
        -webkit-flex: @values;
                flex: @values;
  }

  // Determines the order in which items appear in the flex container.
  //
  // @number - (integer, 0 default) the order in which the item appears in the flex container.
  // ^author
  // : Chris Harvey
  // ^updated
  // : 2015-02-12
  .flex-order(@number) {
    -webkit-box-ordinal-group: @number;
    -webkit-order: @number;
    order: @number;
  }
  //++++ #end ITEMS ++++//
}
