
/*################################*\
    xmeter  |  __fallback.transition.less
\*################################*/


// Applies multiple transition timing effects on an element.
// Each transition effect must have the syntax:
//     [ none | all | ‹single-transition-property› ] || ‹time› || ‹single-transition-timing-function› || ‹time›
// If more than one, list of transitions must be comma-separated and terminated with a semicolon.
//
// ^params
// : @arg - (optional: `all 0ms ease 0ms`) a list of (zero or more) comma-separated transition effects.
//          Must be terminated with a semicolon (;).
// ^author
// : Chris Harvey
// ^updated
// : 2016-05-18
.transition(@arg: all 0ms ease 0ms) {
  -webkit-transition: @arg;
     -moz-transition: @arg;
      -ms-transition: @arg;
       -o-transition: @arg;
          transition: @arg;
}

// The following 4 mixins set one or more longhand transition-* values on an element
// (`transition-property`, `transition-duration`, `transition-timing-function`, and
// `transition-delay`, repsectively).
// Each mixin takes one argument, which is a list of (zero or more) comma-separated values.
// If the list contains more than one value, you MUST terminate it with a semicolon,
// or the Less compiler will interpret your comma-separated list as multiple arguments.
//
// ^params
// : @props - (default: `all`)  the CSS property name(s)
// : @dura  - (default: `0ms`)  the length(s) in time, in milliseconds, the transition is to be in effect
// : @func  - (default: `ease`) the timing-function(s). See `https://developer.mozilla.org/en-US/docs/Web/CSS/timing-function`
// : @delay - (default: `0ms`)  the length(s) in time, in milliseconds, the transition will wait before starting
// ^author
// : Chris Harvey
// ^updated
// : 2016-05-17
.transition-property(@props: all) {
  -webkit-transition-property: @props;
     -moz-transition-property: @props;
      -ms-transition-property: @props;
       -o-transition-property: @props;
          transition-property: @props;
}
.transition-duration(@dura: 0ms) {
  -webkit-transition-duration: @dura;
     -moz-transition-duration: @dura;
      -ms-transition-duration: @dura;
       -o-transition-duration: @dura;
          transition-duration: @dura;
}
.transition-timing-function(@func: ease) {
  -webkit-transition-timing-function: @func;
     -moz-transition-timing-function: @func;
      -ms-transition-timing-function: @func;
       -o-transition-timing-function: @func;
          transition-timing-function: @func;
}
.transition-delay(@delay: 0ms) {
  -webkit-transition-delay: @delay;
     -moz-transition-delay: @delay;
      -ms-transition-delay: @delay;
       -o-transition-delay: @delay;
          transition-delay: @delay;
}

// Applies individual longhand transition-* properties on an element.
// Each parameter must be a list of (zero or more) comma-separated values.
// The default value of each parameter is the default value of its
// corresponding longhand css property.
//
// ^params
// : @props - (default: `all`)  the CSS property name(s)
// : @dura  - (default: `0ms`)  the length(s) in time, in milliseconds, the transition is to be in effect
// : @func  - (default: `ease`) the timing-function(s). See `https://developer.mozilla.org/en-US/docs/Web/CSS/timing-function`
// : @delay - (default: `0ms`)  the length(s) in time, in milliseconds, the transition will wait before starting
// ^author
// : Chris Harvey
// ^updated
// : 2016-05-18
.transitions(@props: all; @dura: 0ms; @func: ease; @delay: 0ms) {
  .transition-property(@props);
  .transition-duration(@dura);
  .transition-timing-function(@func);
  .transition-delay(@delay);
}
