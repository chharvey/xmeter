
/*#################*\
    _flexbox.less
\*#################*/

// Table of Contents
// - FLEXBOXES
//   - Containers
//   - Items


//++++++++++//
/*@FLEXBOXES*/
//++++++++++//

//-----------//
/*@Containers*/
//-----------//
/**
  * Sets up a flexbox container.
@tags
: #flex
: #vendor-specific
@author
: Chris Harvey
@updated
: 2015-02-21
  */
.flexbox() {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
}

/**
  * Determines the direction of the flow.
@params
: @direction :
             : `row` (default)  : left to right in `ltr`; right to left in `rtl`
             : `row-reverse`    : right to left in `ltr`; left to right in `rtl`
             : `column`         : same as `row` but top to bottom
             : `column-reverse` : same as `row-reverse` but bottom to top
@tags
: #flex
: #vendor-specific
@author
: Chris Harvey
@updated
: 2015-02-12
  */
.flex-direction(@direction) {
  -webkit-flex-direction: @direction;
          flex-direction: @direction;
}

/**
  * Determines whether boxes wrap to the next row or column.
@params
: @wrap :
        : `nowrap` (default) : single-line / left to right in `ltr`; right to left in `rtl`
        : `wrap`             : multi-line  / left to right in `ltr`; right to left in `rtl`
        : `wrap-reverse`     : multi-line  / right to left in `ltr`; left to right in `rtl`
@tags
: #flex
: #vendor-specific
@author
: Chris Harvey
@updated
: 2015-02-12
  */
.flex-wrap(@wrap) {
  -webkit-flex-wrap: @wrap;
          flex-wrap: @wrap;
}

/**
  * Determines how content is justified.
@params
: @justify :
           : `flex-start` (default) : items are aligned left (in rows) or top (in columns)
           : `flex-end`             : items are aligned right (in rows) or bottom (in columns)
           : `center`               : items are pushed to middle
           : `space-between`        : extra space is distributed between items,
                                      leaving them flush left/right
           : `space-around`         : extra space is distributed around items,
                                      leaving margin on left/right. Good for centering one item
                                      without using `margin-left: auto; margin-right: auto;`!!!
@tags
: #flex
: #vendor-specific
@author
: Chris Harvey
@updated
: 2015-02-20
  */
.justify-content(@justify) {
  -webkit-justify-content: @justify;
          justify-content: @justify;
}
//---- @end Containers ----//

//------//
/*@Items*/
//------//
/**
  * What does this do again?
@params
: @values : ?????
@tags
: #flex
: #vendor-specific
@author
: Chris Harvey
@updated
: 2015-02-12
  */
.flex(@values) {
  -webkit-box-flex: @values;
      -webkit-flex: @values;
              flex: @values;
}

/**
  * Determines the order in which items appear in the flex container.
@params
: @number : (integer, 0 default) the order in which the item appears in the flex container.
@tags
: #flex
: #vendor-specific
@author
: Chris Harvey
@updated
: 2015-02-12
  */
.flex-order(@number) {
  -webkit-box-ordinal-group: @number;
  -webkit-order: @number;
  order: @number;
}
//---- @end Items ----//
//++++ @end FLEXBOXES ++++//
